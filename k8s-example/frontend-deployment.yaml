apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend-production
  namespace: production
  labels:
    app: frontend-production
spec:
  replicas: 2
  selector:
    matchLabels:
      app: frontend-production
  template:
    metadata:
      labels:
        app: frontend-production
    spec:
      containers:
        - name: frontend
          image: your-ecr-registry/your-frontend-repo:latest
          ports:
            - containerPort: 3000
          env:
            - name: NODE_ENV
              value: "production"
            - name: NEXT_PUBLIC_SERVER_URL
              value: "https://api.yourdomain.com"
            - name: NEXT_PUBLIC_API_URL
              value: "https://api.yourdomain.com/api"
          resources:
            requests:
              memory: "256Mi"
              cpu: "250m"
            limits:
              memory: "512Mi"
              cpu: "500m"
          readinessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /
              port: 3000
            initialDelaySeconds: 30
            periodSeconds: 10

---
apiVersion: v1
kind: Service
metadata:
  name: frontend-service
  namespace: production
spec:
  selector:
    app: frontend-production
  ports:
    - protocol: TCP
      port: 80
      targetPort: 3000
  type: ClusterIP

---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend-ingress
  namespace: production
  annotations:
    kubernetes.io/ingress.class: "nginx"
    cert-manager.io/cluster-issuer: "letsencrypt-prod"
spec:
  tls:
    - hosts:
        - yourdomain.com
      secretName: frontend-tls
  rules:
    - host: yourdomain.com
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend-service
                port:
                  number: 80
